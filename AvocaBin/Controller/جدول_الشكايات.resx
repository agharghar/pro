<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column7.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        P//4AH//+AD///gA///4Af//+CH///hh//8=
</value>
  </data>
</root>